lower <- mean-z95*SEM
upper <- mean+z95*SEM
ifelse(mean > lower && mean < upper, Q<-1, Q<-0)
output[i,] <- cbind(mean, lower, upper, Q)
}
#calculated percentage in CI and print "trial" many runs
percent = (sum(output[,4])/run)*100
cat(sprintf("Number of trials: %d", trial), "\n\n")
print(round(output[1:trial,], digits=5), row.names=FALSE)
cat(sprintf("\n%d percent of CI's contained the mean", percent), "\n")
}
#get results
output <- CIcheck(run=1000, seed=1340, n=100, trial=10)
install.packages(c("devtools","roxygen"))
library(devtools)
insatll_github('hilaryparker/cats')
install_github('hilaryparker/cats')
here_kitty()
library(cats)
here_kitty()
here_kitty()
here_kitty()
has_devel()
devtools::create('misc')
hello R
?if
?if
help(if)
help(topic)
??help
??if
no
help("if")
help(plot)
help("plot")
help("plot")
?help
?if
s
?"if"
?"help
?"help"
help("help")
objects()
rm(pat)
objects()
print(organs)
organs <- c(spleen, lung, pancreas)
d
print(organ)
print(organs)
print(organs)
organs <- c(1,2,3); print(organs)
organs <- c(1, 2, 3); print(organs);
1/2
length(organs)
organs <- c(1, 2, 3); print(organs);
1/2
organs <- c(1, 2, 3); print(organs);
1/2
organs <- c(1, 2, 3); print(organs);
organs <- c("spleen", "lungs", "pancreas"); print(organs);
1/2
length(organs)
length(organs)
sum(organs)
length(organs)
numbers <-c(1,2,3,4,5,6)
sum(numbers)
min(numbers)
min(numbers)
max(numbers)
organs[2]
max(numbers)
var(numbers)
cat("Luce", "+", "emmy")
?order
order(organs)
organs <- c("spleen", "lungs", "pancreas")
print(organs)
length(organs)
numbers <-c(1,2,3,4,5,6)
sum(numbers)
min(numbers)
max(numbers)
var(numbers)
cat("x", "+", "y")
order(organs)
print(organs)
organs <- order(organs)
print(organs)
organs <- order(organs)
print(organs)
organs <- c("spleen", "lungs", "pancreas")
print(organs)
organs <- organs[order(organs)]
print(organs)
organs <- organs[order(organs, decreasing = FALSE)]
print(organs)
organs <- organs[order(organs, decreasing = TRUE)]
print(organs)
plot(organs)
X <- c(1,2,3,4,5,6)
y <- x*2
plot(x,y,"x axis", "y axis")
x*2
x[1:6]*2
X <- c(1,2,3,4,5,6)
y <- x[1:6]*2
X <- c(1,2,3,4,5,6)
x[1:6]
X[1:6]
X[1:6]*2
X*2
X <- c(1,2,3,4,5,6)
Y <- X*2
plot(X,Y,"x axis", "y axis")
?plot
plot(X,Y)
plot(X,Y, xlable = "puppies")
Y <- X*2
Y <- X*2
plot(X,Y, xlab("puppies"))
Y <- X*2
plot(X,Y, "puppies")
Y <- X*2
plot(X,Y, xlab = "puppies")
X <- c(1,2,3,4,5,6)
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief")
?plot
, Main
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief", main = "The role of pupperdoodles in creating mischief in the house")
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief",
main = "The role of pupperdoodles in creating mischief in the house")
?plot
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief",
main = "The role of pupperdoodles in creating mischief in the house", type ="b")
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief",
main = "The role of pupperdoodles in creating mischief in the house", type ="c")
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief",
main = "The role of pupperdoodles in creating mischief in the house", type = "s", sub= "learning to R great again")
par()
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief",
main = "The role of pupperdoodles in creating mischief in the house",
type = "b", sub= "learning to R great again", symbols(stars))
plot(X,Y, xlab = "puppies", ylab = "mischief",
main = "The role of pupperdoodles in creating mischief in the house",
type = "b", sub= "learning to R great again", symbols(stars = 2,2))
X <- c(1,2,3,4,5,6)
Y <- X^2
plot(X,Y, xlab = "puppies", ylab = "mischief",
main = "The role of pupperdoodles in creating mischief in the house",
type = "b", sub= "learning to R great again", symbols(stars = 2,2,2))
?stars
var(numbers)
3*1:2^2
3*(1:2)^2
seq(1,30, by=2)
seq(1,30, by=pi)
seq(1,30, by=pi)
seq(length=15, 2, by=3)
rep(8, 3)
toomanyorgans <- rep(organs, each=3)
toomanyorgans <- rep(organs, each=3)
print(toomanyorgans)
toomanyorgans <- rep(organs, times=3)
print(toomanyorgans)
bignum <- numbers <3
bignum
bignum <- numbers > 3
bignum
z <- c(1:3,NA); ind <- is.na(z)
ind
is.null
is.null(x)
is.null(X)
print(toomanyorgans)
print("\\")
bignum <- numbers > 3
toomanyorgans <- rep(organs, times=3)
print(toomanyorgans)
print(toomanyorgans)
print("\\")
openclosedtree=read.tree("jetzopenclosedconsensusmatchwithbranchlengths.nwk")
search(ape)
search(ape)
search()
library()
install.packages(c("ape", "phytools", "diversitree"))
openclosedtreenoroot=drop.tip(openclosedtree, 1, root.edge = 0)
plot.phylo(openclosedtreenoroot)
repsize=c(10, 20, 80, 2, 119, 68, 1, 44, 216, 1805, 328, 108, 1160, 31.5, 5, 5, 11, 5, 8, 25, 18, 8, 14, 5, 15, 1, 2, 1.5, 5, 4, 3, 38, 15)
repsizetruncated=c(10, 20, 80, 2, 101, 68, 1, 44, 102, 105, 103, 100, 104, 31.5, 5, 5, 11, 5, 8, 25, 18, 8, 14, 5, 15, 1, 2, 1.5, 5, 4, 3, 38, 15)
names(repsize)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
names(repsizetruncated)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
AB<-contMap(openclosedtreenoroot,x=repsizetruncated,type="fan",fsize=0.4,lwd=3,plot=FALSE)
pdf(paste("continuouscharactermappingOPENCLOSEDrepsizetruncated3.pdf",sep=""))
plot(AB,lwd=3,fsize=0.8)
dev.off()
testopenclosed = ace(x=openclosed, phy=openclosedtreenoroot, type="discrete", model="ER")
pdf(paste("openclosedlearningACE2.pdf",sep=""))
plot.phylo(openclosedtreenoroot, cex=0.5)
tiplabels(pch = 21, bg = co[as.numeric(openclosed)+1], cex = 0.7)
dev.off()
nodelabels(thermo=testopenclosed$lik.anc, piecol=c("white", "black"), cex=0.3)
co <- c("white", "black")
names(openclosed)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
openclosed=c(0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
names(AB$cols)=rev(names(AB$cols))
source('~/Preey rainbow tree script played with.R', echo=TRUE)
openclosedtree=read.tree("jetzopenclosedconsensusmatchwithbranchlengths.nwk")
openclosedtreenoroot=drop.tip(openclosedtree, 1, root.edge = 0)
plot.phylo(openclosedtreenoroot)
repsize=c(10, 20, 80, 2, 119, 68, 1, 44, 216, 1805, 328, 108, 1160, 31.5, 5, 5, 11, 5, 8, 25, 18, 8, 14, 5, 15, 1, 2, 1.5, 5, 4, 3, 38, 15)
repsizetruncated=c(10, 20, 80, 2, 101, 68, 1, 44, 102, 105, 103, 100, 104, 31.5, 5, 5, 11, 5, 8, 25, 18, 8, 14, 5, 15, 1, 2, 1.5, 5, 4, 3, 38, 15)
openclosed=c(0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
names(repsize)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
names(repsizetruncated)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
names(openclosed)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
library(phytools)
library(ape)
library(maps)
library(phytools)
library(diversitree)
openclosedtree=read.tree("jetzopenclosedconsensusmatchwithbranchlengths.nwk")
openclosedtreenoroot=drop.tip(openclosedtree, 1, root.edge = 0)
plot.phylo(openclosedtreenoroot)
repsize=c(10, 20, 80, 2, 119, 68, 1, 44, 216, 1805, 328, 108, 1160, 31.5, 5, 5, 11, 5, 8, 25, 18, 8, 14, 5, 15, 1, 2, 1.5, 5, 4, 3, 38, 15)
repsizetruncated=c(10, 20, 80, 2, 101, 68, 1, 44, 102, 105, 103, 100, 104, 31.5, 5, 5, 11, 5, 8, 25, 18, 8, 14, 5, 15, 1, 2, 1.5, 5, 4, 3, 38, 15)
openclosed=c(0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
names(repsize)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
names(repsizetruncated)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
names(openclosed)=c("Parus_major", "Hirundo_rustica", "Phylloscopus_trochilus", "Phylloscopus_collybita", "Sylvia_communis", "Acrocephalus_schoenobaenus","Locustella_naevia", "Sturnus_vulgaris", "Mimus_polyglottos", "Toxostoma_rufum", "Dumetella_carolinensis", "Turdus_merula", "Luscinia_megarhynchos", "Ficedula_hypoleuca", "Phoenicurus_ochruros", "Certhia_familiaris", "Lonchura_striata", "Lonchura_oryzivora", "Taeniopygia_guttata", "Serinus_canaria", "Fringilla_coelebs", "Passerina_cyanea", "Cardinalis_cardinalis", "Geothlypis_trichas", "Molothrus_ater", "Spizella_passerina", "Spizella_pusilla", "Junco_hyemalis", "Zonotrichia_albicollis", "Zonotrichia_leucophrys", "Melospiza_georgiana", "Melospiza_melodia", "Pipilo_erythrophthalmus")
AB<-contMap(openclosedtreenoroot,x=repsizetruncated,type="fan",fsize=0.4,lwd=3,plot=FALSE)
names(AB$cols)=rev(names(AB$cols))
pdf(paste("continuouscharactermappingOPENCLOSEDrepsizetruncated3.pdf",sep=""))
plot(AB,lwd=3,fsize=0.8)
dev.off()
co <- c("white", "black")
testopenclosed = ace(x=openclosed, phy=openclosedtreenoroot, type="discrete", model="ER")
pdf(paste("openclosedlearningACE2.pdf",sep=""))
plot.phylo(openclosedtreenoroot, cex=0.5)
nodelabels(thermo=testopenclosed$lik.anc, piecol=c("white", "black"), cex=0.3)
tiplabels(pch = 21, bg = co[as.numeric(openclosed)+1], cex = 0.7)
dev.off()
install.packages("meta")
TtoR <-function(t, df) {
sqrt((t^2)/(t^2+df))
}
ZtoR <- function(z,N){
sqrt((z^2)/(z^2+N))
}
Fn1toR <- function(f, dfd){
return(sqrt((f)/(f+dfd)))
}
Fn2toR <- function(f, dfd, dfn){
return(sqrt((dfn*f)/((dfn*f)+dfd)))
}
X21toR <- function(X2, N){
sqrt((X2^2)/N)
}
DtoR <- function(d){
sqrt((d^2)/(4+d^2))
}
ZtoR(2.02, 14)
TtoR <-function(t, df) {
return(sqrt((t^2)/(t^2+df)))
}
ZtoR <- function(z,N){
return(sqrt((z^2)/(z^2+N)))
}
Fn1toR <- function(f, dfd){
return(sqrt((f)/(f+dfd)))
}
Fn2toR <- function(f, dfd, dfn){
return(sqrt((dfn*f)/((dfn*f)+dfd)))
}
X21toR <- function(X2, N){
return(sqrt((X2^2)/N))
}
X21toR <- function(X2, N){
return(sqrt((X2^2)/(X2^2+ N)))
}
DtoR <- function(d){
return(sqrt((d^2)/(4+d^2)))
}
ZtoR(2.02, 14)
ZtoR(2.02, 14)
ZtoR(2.07, 14)
ZtoR(2.07, 9)
ZtoR(-2.7, 10)
DtoR(-.306)
DtoR(-.308)
DtoR(-.246)
TautoR <- function(tau){
return(sin(.5*pi*tau))
}
TautoR(.285)
TautoR(.143)
TautoR(-.331)
TautoR(-.025)
DtoR(-.316)
DtoR(.358)
Fn1toR(5.8, 32)
Fn1toR(3.9, 32)
UtoR <-function(U){
return(1/U)
}
UtoR(29)
UtoR <-function(U, N1, N2){
return((U-((N1*N1)/2))/(sqrt((N1*N2*((N1+N2)+1))/12)))
}
UtoR(29,17,7)
UtoR(2.9,17,7)
UtoR(29,17,7)
n1 <- 17
n2 <- 7
sqrt((N1*N2*(N1+N2+1))/12)
N1 <- 17
N2 <- 7
sqrt((N1*N2*(N1+N2+1))/12)
N1*N2*(N1+N2+1)
(N1*N2*(N1+N2+1))/12)
(N1*N2*(N1+N2+1))/12
sqrt((N1*N2*(N1+N2+1))/12))
sqrt((N1*N2*(N1+N2+1))/12)
(N1*N1)/2)
UtoR <-function(U, N1, N2){
return((U-((N1*N2)/2))/(sqrt((N1*N2*(N1+N2+1))/12)))
}
UtoR(29,17,7)
(N1*N2)/2
29-59.5
-30.5/15.74
UtoR(29,17,7)
UtoZ <-function(U, N1, N2){
return((U-((N1*N2)/2))/(sqrt((N1*N2*(N1+N2+1))/12)))
}
UtoR(29,17,7)
ZtoR(UtoR(29,17,7), (17+7))
ZtoR(-1.685, (17+7))
Fn1toR(3.9, 29)
Fn1toR(5.8, 29)
Fn1toR(3.9, 6)
Fn1toR(3.9, 7)
Fn1toR(6.4, 39)
Fn1toR(6.4, 38)
Fn1toR(9.2, 19)
Fn1toR(5.21, 36)
Fn1toR(6.7, 79)
Fn1toR(6.7, 80)
TtoR(3.209, 13)
TtoR(-.15, 18)
TtoR(-2.21, 18)
X21toR <- function(X2, N){
return(sqrt((X2^2)/N))
}
X22toR <- function(X2, N){
return(sqrt((X2^2)/(X2^2+ N)))
}
X21toR(4.6, 61)
X22toR(4.6, 63)
X22toR(.4, 62)
ZtoR(-1.39, 19
DtoR(.358)
TautoR(-.025)
Fn1toR(6.7, 80)
ZtoR(UtoR(29,17,7), (17+7))
TtoR(-2.21, 18)
UtoZ(29,17,7)
ZtoR(UtoZ(29,17,7), (17+7))
TtoR <-function(t, df) {
return(sqrt((t^2)/(t^2+df)))
}
ZtoR <- function(z,N){
return(sqrt((z^2)/(z^2+N)))
}
Fn1toR <- function(f, dfd){
return(sqrt((f)/(f+dfd)))
}
Fn2toR <- function(f, dfd, dfn){
return(sqrt((dfn*f)/((dfn*f)+dfd)))
}
X21toR <- function(X2, N){
return(sqrt((X2^2)/N))
}
X22toR <- function(X2, N){
return(sqrt((X2^2)/(X2^2+ N)))
}
DtoR <- function(d){
return(sqrt((d^2)/(4+d^2)))
}
TautoR <- function(tau){
return(sin(.5*pi*tau))
}
UtoZ <-function(U, N1, N2){
return((U-((N1*N2)/2))/(sqrt((N1*N2*(N1+N2+1))/12)))
}
ZtoR(-2.7, 10)
DtoR(-.308)
DtoR(-.316)
X21toR(4.6, 72)
X21toR(4.6, 76)
Fn1toR(6.4, 38)
Fn1toR(5.8, 29)
Fn1toR(3.9, 6)
Fn1toR(9.2, 19)
DtoR(.246)
Fn1toR(5.21, 34)
TtoR(3.209, 13)
TautoR(.285)
TautoR(.143)
TautoR(-.331)
TautoR(-.025)
TautoR(.002)
Fn1toR(9.2, 19)
DtoR(-.306)
TtoR(-.4, 6)
ZtoR(2.02, 9)
ZtoR(2.07, 14)
ZtoR(UtoZ(29,17,7), (17+7))
install.packages(c("caTools", "colorspace", "devtools", "digest", "evaluate", "formatR", "gtable", "hexbin", "highr", "htmltools", "httr", "jsonlite", "knitr", "manipulate", "mapproj", "maps", "markdown", "memoise", "mime", "munsell", "plyr", "RColorBrewer", "Rcpp", "RCurl", "reshape2", "rmarkdown", "roxygen2", "rstudioapi", "testthat"))
sessionInfo()
install.packages("phytools")
sessionInfo()
install.packages("phytools")
install.packages("phytools")
sessionInfo()
install.packages("phytools")
package_version(phytools)
rm(list = objects())
rm(list = objects())
#install.packages("maps")
#install.packages("ape")
#install.packages("phytools")
#Libraries
library(maps)
library(ape)
library(phytools)
sessionInfo()
install.packages("phytools")
library(devtools)
install_github("liamrevell/phytools")
install.packages("phytools")
session_info()
library(phytools)
#install.packages("maps")
#install.packages("ape")
#install.packages("phytools")
#Libraries
library(maps)
library(ape)
library(phytools)
session_info()
rm(list = objects())
library(devtools)
install_github("liamrevell/phytools")
nicole [10:29]
library(devtools)
install_github("liamrevell/phytools")
install_github("liamrevell/phytools")
install_github()
sessionInfo()
installed.packages()
install.packages("devtools")
library(devtools)
install_github("liamrevell/phytools")
rm(list = objects())
#install.packages("maps")
#install.packages("ape")
#install.packages("phytools")
#Libraries
library(maps)
library(ape)
library(phytools)
updateR()
script <- getURL("https://github.com/NeuroBio/2017-Meta-Analysis/blob/master/Code/Tree%20functions_.R", ssl.verifypeer = FALSE)
library(RCurl)
script <- getURL("https://github.com/NeuroBio/2017-Meta-Analysis/blob/master/Code/Tree%20functions_.R", ssl.verifypeer = FALSE)
script
script <- getURL("https://raw.githubusercontent.com/opetchey/RREEBES/Beninca_development/Beninca_etal_2008_Nature/report/functions/indirect_method_functions.R", ssl.verifypeer = FALSE)
script
script <- getURL("https://raw.githubusercontent.com/NeuroBio/2017-Meta-Analysis/blob/master/Code/Tree%20functions_.R", ssl.verifypeer = FALSE)
script
script <- getURL("https://raw.githubusercontent.com/NeuroBio/2017-Meta-Analysis/master/Code/Tree%20functions_.R?token=AITiyWT-dxT0Bj-3txWgyOkiBq06eY0Dks5aeuYswA%3D%3D", ssl.verifypeer = FALSE)
script
eval(parse(text = script))
#The next two lines load some code from my GitHub Repo so you have access to some tools you need
script <- getURL("https://raw.githubusercontent.com/NeuroBio/2017-Meta-Analysis/master/Code/Tree%20functions_.R", ssl.verifypeer = FALSE)
script
#The next two lines load some code from my GitHub Repo so you have access to some tools you need
script <- getURL("https://raw.githubusercontent.com/NeuroBio/2017-Meta-Analysis/master/Code/Tree%20functions_.R?token=AITiyWT-dxT0Bj-3txWgyOkiBq06eY0Dks5aeuYswA%3D%3D", ssl.verifypeer = FALSE)
#The next two lines load some code from my GitHub Repo so you have access to some tools you need
script <- getURL("https://raw.githubusercontent.com/NeuroBio/2017-Meta-Analysis/master/Code/Tree%20functions_.R?token=AITiyWT-dxT0Bj-3txWgyOkiBq06eY0Dks5aeuYswA%3D%3D")
script
#Coding 104!
rm(list = objects()) #this kills everything in your environment!!!!!
setwd("C:/Users/Kara/Documents/r/Birbclass")
TestData<-read.table("abigailtestdata.txt", sep = '\t',header = TRUE, fileEncoding = "UTF-8")
MetaData<-read.csv('TestMetaData Feb 19th-Mar19th.csv')
#install.packages("RCurl") #you only ever need to run this once!  It adds a set of functions (a package) to R
library(bitops)#load functions from that package
library(RCurl)#load functions from that package
??config
R.version
